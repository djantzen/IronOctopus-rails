#activity-display-panel.container-fluid
  .row-fluid
    #basic-info.span3.well
      .row-fluid
        %h3= @activity.name
      %br
      .row-fluid
        = @activity.activity_type.name
      %br
      .row-fluid
        = markup(@activity.instructions)
      %br
      .row-fluid
        Created by #{@activity.creator.full_name} on #{@activity.created_at.to_date}
      .row-fluid
        Last updated on #{@activity.updated_at.to_date}
      %br
      .row-fluid
        - if can? :update, @activity
          = link_to("Edit", edit_activity_path(@activity), :class => "btn btn-primary")
    .span8.well
      .row-fluid
        .span3
          %h2 Anatomy
          %ul
            - @activity.body_parts.each do |body_part|
              %li
                = body_part.name
        .span3
          %h2 Equipment
          %ul
            - @activity.implements.each do |implement|
              %li
                = implement.name
        .span3
          %h2 Metrics
          %ul
            - @activity.metrics.each do |metric|
              %li
                = metric.name
        .span3
          %h2 Attributes
          %ul
            - @activity.activity_attributes.each do |attribute|
              %li
                = attribute.name
      %br
      .row-fluid
        #player
        - video_ids = activity_video_ids(@activity)
        #video-id
          = video_ids[0]
        - if video_ids[0]
          :javascript
            var video_id = $("#video-id").text().trim();
            var tag = document.createElement('script');

            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[1];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            var player;
            function onYouTubeIframeAPIReady() {
              player = new YT.Player('player', {
                height: '390',
                width: '640',
                videoId: video_id,
                events: {
                  'onReady': onPlayerReady,
                  'onStateChange': onPlayerStateChange
                }
              });
            }

            function onPlayerReady(event) {
              event.target.playVideo();
            }

            var done = false;
            function onPlayerStateChange(event) {
              if (event.data == YT.PlayerState.PLAYING && !done) {
                setTimeout(stopVideo, 6000);
                done = true;
              }
            }
            function stopVideo() {
              player.stopVideo();
            }
      .row-fluid
        %h4
          Images
      .row-fluid
        - @activity.activity_images.each do |image|
          = image_tag image.image_url(:thumb)
