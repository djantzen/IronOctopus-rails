.container-fluid{ :class => (template ? "activity-set-group-template" : "activity-set-group")}
  .row.group-controls
    .span5
      .row-fluid.handle
        .span3.offset3
          %input.activity-set-group-name.input-large{:name => "routine[activity_set_groups][][group_name]", :value => (template ? "" : group.name),
                             :placeholder => "Group name"}
      .row-fluid.measure-selector
        .span3.offset2.activity-set-set-count
          %label.measure-label{:for => "routine[activity_set_groups][][set_count]"}
            Sets
          %input.measure-tiny.spinner.number.positive_number.required{:value => (template ? 1 : group.sets), :min => 1,
                                                                      :name => "routine[activity_set_groups][][set_count]"}
        .span4.rest-interval
          %label.measure-label{:for => "routine[activity_set_groups][][rest_interval]"}
            Rest Interval
          %input.measure.timespinner.is_duration_valid{:name => "routine[activity_set_groups][][rest_interval]", :value => (template ? "0:00" : Unit.seconds_to_digital(group.rest_interval))}
  .row.grouped-activity-sets
    - unless template
      - activity_sets.each do |activity_set|
        .activity-set-form.assigned
          = render :partial => "activity_sets/form", :locals => { :activity => activity_set.activity,
                                                     :activity_set => activity_set, :template => false }
  - if template
    .row.pull-right
      = render :partial => "shared/button", :locals => { :button_class => "okay-activity-set-group-button btn-primary",
                                                         :icon => "icon-ok", :message => "Group Complete" }
